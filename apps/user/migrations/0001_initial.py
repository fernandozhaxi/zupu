# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2019-10-11 14:46
from __future__ import unicode_literals

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=10, verbose_name='姓名')),
                ('nick_name', models.CharField(blank=True, max_length=10, verbose_name='昵称')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('mobile', models.CharField(blank=True, max_length=11, verbose_name='电话')),
                ('gender', models.IntegerField(blank=True, default=0, null=True, verbose_name='性别')),
                ('email', models.CharField(blank=True, max_length=50, verbose_name='邮箱')),
                ('individuality_signature', models.TextField()),
                ('avatar', models.ImageField(upload_to='', verbose_name='头像')),
                ('created_time', models.DateTimeField(default=datetime.datetime.now)),
                ('status', models.IntegerField(default=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('article_id', models.CharField(max_length=20)),
                ('created_time', models.DateTimeField()),
                ('content_text', models.CharField(max_length=500)),
                ('content_img', models.CharField(max_length=500)),
                ('status', models.CharField(max_length=2, verbose_name='评论状态')),
                ('zan_number', models.CharField(max_length=10, verbose_name='点赞数量')),
                ('from_id', models.CharField(max_length=32)),
                ('to_id', models.CharField(max_length=32)),
            ],
            options={
                'verbose_name': '评论',
                'verbose_name_plural': '评论',
            },
        ),
        migrations.CreateModel(
            name='UserLevel',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='等级称号')),
                ('desc', models.CharField(blank=True, max_length=100, verbose_name='描述')),
                ('label', models.ImageField(blank=True, upload_to='', verbose_name='图标')),
                ('created_time', models.DateTimeField(default=datetime.datetime.now)),
                ('min_score', models.IntegerField(default=0, verbose_name='最小经验值')),
                ('max_score', models.IntegerField(default=0, verbose_name='最大经验值')),
            ],
            options={
                'verbose_name': '用户等级',
                'verbose_name_plural': '用户等级',
            },
        ),
        migrations.CreateModel(
            name='VerifyCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='验证码')),
                ('mobile', models.CharField(max_length=11, verbose_name='电话')),
                ('created_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '短信验证码',
                'verbose_name_plural': '短信验证码',
            },
        ),
        migrations.CreateModel(
            name='Zan',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=2, verbose_name='赞同类别')),
                ('created_time', models.DateTimeField(verbose_name='创建的赞同时间')),
                ('last_modify_time', models.DateTimeField(verbose_name='最后的赞同/取消赞同时间')),
                ('to_id', models.CharField(max_length=32, verbose_name='赞同的对象的id')),
                ('status', models.CharField(max_length=2, verbose_name='赞同状态')),
                ('author_id', models.CharField(max_length=32, verbose_name='赞同类别')),
            ],
            options={
                'verbose_name': '赞同',
                'verbose_name_plural': '赞同',
            },
        ),
    ]
